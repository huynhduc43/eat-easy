name: 'Build and deploy to AWS EC2'

on:
  push:
    tags:
      - 'v*'
    # branches: [main]

jobs:
  build-and-push:
    name: Build and push image to DockerHub
    runs-on: ubuntu-latest
    # Output versionTag so it can be used in other jobs
    outputs:
      versionTag: ${{ steps.extract_version.outputs.version_tag }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Create .env.local file
      - name: Create .env.local file
        run: |
          echo "${{ secrets.ENV_LIST }}" > .env.local

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Tags docker image
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKER_USERNAME }}/eat-easy
          tags: |
            type=ref,event=tag    # This captures the `v*` tag (e.g., v1.0.0)
            type=raw,value=latest # This captures the `latest` tag

      - name: Extract version tag (v*)
        id: extract_version
        run: |
          # This extracts the `v*` tag from the comma-separated tags list and stores it in an output
          echo "version_tag=$(echo ${{ steps.meta.outputs.tags }} | tr ',' '\n' | grep '^v')" >> $GITHUB_OUTPUT
          outputs:
            version_tag: ${{ steps.extract_version.outputs.version_tag }}

      - name: Build and push to DockerHub
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}

  deploy:
    name: Deploy to AWS EC2
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Executing remote ssh commands using password
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_INSTANCE_IP }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            # Pull the Docker image with the tag from the previous job
            docker pull ${{ secrets.DOCKER_USERNAME }}/eat-easy:${{ needs.build-and-push.outputs.versionTag }}

            # Stop and remove the existing container (if any)
            docker stop eat-easy || true
            docker rm eat-easy || true

            # Run the new container
            docker run -d --name eat-easy -p 80:3000 ${{ secrets.DOCKER_USERNAME }}/eat-easy:${{ needs.build-and-push.outputs.versionTag }}
