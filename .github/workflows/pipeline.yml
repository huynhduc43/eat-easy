name: 'Build and deploy to AWS EC2'

on:
  push:
    tags:
      - 'v*'
    # branches: [main]

jobs:
  build-and-push:
    name: Build and push image to DockerHub
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9 # Set the desired pnpm version

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2

      # Create .env.local file
      - name: Create .env.local file
        run: |
          echo "${{ secrets.ENV_LIST }}" > .env.local

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Tags docker image
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKER_USERNAME }}/eat-easy

      - name: Build and push to DockerHub
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}

  deploy:
    name: Deploy to AWS EC2
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Executing remote ssh commands using password
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_INSTANCE_IP }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            # Pull the Docker image with the tag from the previous job
            docker pull ${{ secrets.DOCKER_USERNAME }}/eat-easy:${{ needs.build-and-push.outputs['meta.outputs.tags'] }}

            # Stop and remove the existing container (if any)
            docker stop eat-easy || true
            docker rm eat-easy || true

            # Run the new container
            docker run -d --name eat-easy -p 80:3000 ${{ secrets.DOCKER_USERNAME }}/eat-easy:${{ needs.build-and-push.outputs['meta.outputs.tags'] }}
